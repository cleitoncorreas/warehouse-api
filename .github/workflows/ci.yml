# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:12
        ports: ["5432:5432"]
        env:
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd pg_isready 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5
          
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout Repository
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Set up Ruby
            uses: ruby/setup-ruby@ec106b438a1ff6ff109590de34ddc62c540232e0
            with:
              ruby-version: 2.5
      - name: Install PostgreSQL 12 client
            run: |
              sudo apt-get -yqq install libpq-dev
      - name: Cache Ruby Gems
            uses: actions/cache@v2
            with:
              path: vendor/bundle
              key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
              restore-keys: |
                ${{ runner.os }}-gems-

          - name: Bundle Install
            run: |
              bundle config path vendor/bundle
              bundle install --jobs 4 --retry 3
      - name: Run Tests
            env:
              PG_DATABASE: postgres
              PG_HOST: localhost
              PG_USER: postgres
              PG_PASSWORD: password
              RAILS_ENV: test
              WITH_COVERAGE: true
              DISABLE_SPRING: 1
            run: |
              bin/rails db:setup
              bundle exec rake test
      - name: Upload Code Coverage
            uses: actions/upload-artifact@v2
            with:
              name: code-coverage
              path: coverage/
      - name: Formatting and Security Checks
            run: |
              bundle exec rubocop
              bundle exec brakeman -z
              gem install bundle-audit
              bundle-audit update
              bundle-audit
